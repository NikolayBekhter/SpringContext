Index: src/main/java/ru/geekbrains/ProductDao.java
===================================================================
diff --git a/src/main/java/ru/geekbrains/ProductDao.java b/src/main/java/ru/geekbrains/productDao/ProductDao.java
rename from src/main/java/ru/geekbrains/ProductDao.java
rename to src/main/java/ru/geekbrains/productDao/ProductDao.java
--- a/src/main/java/ru/geekbrains/ProductDao.java	
+++ b/src/main/java/ru/geekbrains/productDao/ProductDao.java	
@@ -1,4 +1,6 @@
-package ru.geekbrains;
+package ru.geekbrains.productDao;
+
+import ru.geekbrains.model.Product;
 
 import java.util.List;
 
Index: src/main/java/ru/geekbrains/SessionFactoryUtils.java
===================================================================
diff --git a/src/main/java/ru/geekbrains/SessionFactoryUtils.java b/src/main/java/ru/geekbrains/utils/SessionFactoryUtils.java
rename from src/main/java/ru/geekbrains/SessionFactoryUtils.java
rename to src/main/java/ru/geekbrains/utils/SessionFactoryUtils.java
--- a/src/main/java/ru/geekbrains/SessionFactoryUtils.java	
+++ b/src/main/java/ru/geekbrains/utils/SessionFactoryUtils.java	
@@ -1,4 +1,4 @@
-package ru.geekbrains;
+package ru.geekbrains.utils;
 
 import org.hibernate.Session;
 import org.hibernate.SessionFactory;
Index: src/main/java/ru/geekbrains/ProductDaoImpl.java
===================================================================
diff --git a/src/main/java/ru/geekbrains/ProductDaoImpl.java b/src/main/java/ru/geekbrains/productDao/ProductDaoImpl.java
rename from src/main/java/ru/geekbrains/ProductDaoImpl.java
rename to src/main/java/ru/geekbrains/productDao/ProductDaoImpl.java
--- a/src/main/java/ru/geekbrains/ProductDaoImpl.java	
+++ b/src/main/java/ru/geekbrains/productDao/ProductDaoImpl.java	
@@ -1,10 +1,12 @@
-package ru.geekbrains;
+package ru.geekbrains.productDao;
 
 import org.hibernate.Session;
+import ru.geekbrains.model.Product;
+import ru.geekbrains.utils.SessionFactoryUtils;
 
 import java.util.List;
 
-public class ProductDaoImpl implements ProductDao{
+public class ProductDaoImpl implements ProductDao {
 
     SessionFactoryUtils sessionFactoryUtils;
 
@@ -46,7 +48,7 @@
     public void save(Product product) {
         try (Session session = sessionFactoryUtils.getSession()) {
             session.beginTransaction();
-            session.saveOrUpdate(product);
+            session.save(product);
             session.getTransaction().commit();
         }
     }
Index: src/main/resources/hibernate.cfg.xml
===================================================================
diff --git a/src/main/resources/hibernate.cfg.xml b/src/main/resources/hibernate.cfg.xml
--- a/src/main/resources/hibernate.cfg.xml	
+++ b/src/main/resources/hibernate.cfg.xml	
@@ -11,10 +11,10 @@
         <property name="connection.pool_size">2</property>
         <property name="dialect">org.hibernate.dialect.PostgreSQL94Dialect</property>
         <property name="show_sql">true</property>
-        <property name="hbm2ddl.auto">create-drop</property>
+        <property name="hbm2ddl.auto">none</property>
         <property name="current_session_context_class">thread</property>
 
-        <mapping class="ru.geekbrains.Product"/>
+        <mapping class="ru.geekbrains.model.Product"/>
 
     </session-factory>
 </hibernate-configuration>
\ No newline at end of file
Index: src/main/resources/import.sql
===================================================================
diff --git a/src/main/resources/import.sql b/src/main/resources/import.sql
--- a/src/main/resources/import.sql	
+++ b/src/main/resources/import.sql	
@@ -1,12 +1,3 @@
-
-CREATE TABLE IF NOT EXISTS products (
-    id bigserial,
-    title VARCHAR(255),
-    cost INTEGER NOT NULL,
-    CONSTRAINT pk_products PRIMARY KEY (id)
-);
-INSERT INTO products (title, cost) VALUES ('Apple', 10);
-INSERT INTO products (title, cost) VALUES ('Lemon', 30);
-INSERT INTO products (title, cost) VALUES ('Orange', 17);
-INSERT INTO products (title, cost) VALUES ('Garnet', 35);
-INSERT INTO products (title, cost) VALUES ('Pear', 15);
\ No newline at end of file
+DROP TABLE IF EXISTS products;
+CREATE TABLE IF NOT EXISTS products (id bigserial, title VARCHAR(255), cost INTEGER NOT NULL, CONSTRAINT pk_products PRIMARY KEY (id));
+INSERT INTO products (title, cost) VALUES ('Apple', 10), ('Lemon', 30), ('Orange', 17), ('Garnet', 35), ('Pear', 15);
\ No newline at end of file
